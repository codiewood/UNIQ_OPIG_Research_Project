General code stuff:
-Changed 'Unused' to light grey  bars for aesthetics.
-With this introduction can see that some mouse  data is likely incomplete, 
 unused positions decreasing from 1 to 20 until insig.
-Tweaked code slightly so now only for non redundant data.
-Made code object oriented to allow easier use across dif files/scripts and
 translated this onto all still in use python scripts.
-Introduced a threshold variable  for the number of times a position should
 show up before being considered.

	Issues/Notes:
	-Not sure what to do about 'unused' positions in terms of my mutual
	 information script. If position is unused then doesn't show up in
	 the data, which means probabilities cant be properly calculated.
		-Think have fixed by use of if loops for unused case. But
		 unsure as to if this sol is best or if should just discount
		 unused, as unsure which unused are due to sequencing.
	-MI code wont work out any mutual info for positions that just dont
	 ever show in data set (eg position 10 for human data) but don't think
	 this is a large issue as if the position is never there, wont be
	 able to gain any info from it anyway.
	-Unsure what an appropriate threshold value would be. Tried 20 but
	 didn't seem to make much difference. Noted that position 10 still
	 shows up for Collins mouse data. Upon further investigation,
	 noted that this position shows up 56 times (likely due to error?
	 as this data has approx 31.7% of its sequences suspected to contain
	 at least 1 error and position 10 is only supposed to be present in
	 certain non-human species). Also tried threshold 60.
	
	Would like to:
	-Suggestion from Alex to look at specific families (by IMGT gene
	 annotation) to make my analysis cleaner.

Mutual Info:
-Found python package with mutual info built in (sklearn.stats) and have
 caluclated normalized MI values for each position pair in human data
 with a position use threshold of 20.
-Chose to calculate normalized mutual information soi that ther was more
 obvious scaling of the value and can more easily tell what values were
 'high' and which 'low'.

Stats tests:
-Found python code for Chi2 and Spearmans rank tests (scipy) and have run
 for each position that occurs in both the mouse and the human data sets
 to see if they are sig dif in the proportions and ranks of amino acids
 at each position.

	Issues/Notes:
	-Not sure that chi2 test is appropriate, as some freq have very small
	 values (below 5) which isn't advised to use for chi2
	-Seems to report sig dif for very slight changes so not very good as
	 a measure.
	-Similar issue with Spearman's rank, always reports a monotonic assoc

	Would like to:
	-Look at K-L divergence as a measure of difference between the mouse
	 and human data sets.

Random forest:
-Ran random forest on CDRH3 sequences of length 15 - managed to get fairly
 accurate predictions (all accuracy values >0.9)
-Choice to use 10 trees initially was quite arbitrary - was planning on starting
 small and increasing until good accuracy but seems that small works. With 20 got
 some accuracy values of 1.
-Also looked at the feature importance of each position - noted that position
 117 was always the highested valued at around 0.12 - 0.22 and usually much
 higher than any other positions.

	Issues/Notes:
	-Looked at 117 in more detail and not entirely sure as to why the
	 importance occurs. Seems to have quite high MI (>0.9) with other
	 early positions. Also, has lots of 1 values with other positions
	 in CDRH3. Not obvious difference from freq graphs.
	
	Would like to:
	-Repeat with some other length CDRH3
	-Try with all of the CDRH3 sequences
	-Try some dif numbers of trees
